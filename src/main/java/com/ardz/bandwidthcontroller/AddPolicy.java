/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ardz.bandwidthcontroller;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.Iterator;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

/**
 *
 * @author ardzix
 */
public class AddPolicy extends javax.swing.JFrame {

    static HttpClientHandler http = new HttpClientHandler();
    static JSONObject qosList = null;

    static javax.swing.JList qosListSwitch;

    /**
     * Creates new form AddQoS
     */
    public AddPolicy() {
        initComponents();
        initPosition();
        initCompatibility();
        try {
            JSONObject device = http.sendGet("http://"+Util.getControllerAddres()+"/wm/device/");

            for (int i = 0; i < device.size(); i++) {
                JSONObject currentDevice = (JSONObject) device.get(i);
                JSONArray attachmentPoint = (JSONArray) currentDevice.get("attachmentPoint");
                if (!attachmentPoint.isEmpty()) {
                    JSONObject attachmentPointObj = (JSONObject) attachmentPoint.get(0);
                    switchComboBox.addItem(attachmentPointObj.get("switchDPID"));

                }
            }

//            for (int i = 0; i < switchComboBox.getItemCount(); i++) {
//
//                for (int j = 0; j < switchComboBox.getItemCount(); j++) {
//                    if (switchComboBox.getItemAt(i).equals(switchComboBox.getItemAt(j))) {
//                        switchComboBox.removeItemAt(j);
//                    }
//                }
//            }
        } catch (Exception ex) {
            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        qosNameTextField = new javax.swing.JTextField();
        ipSourceTextField = new javax.swing.JTextField();
        ipDestTextField = new javax.swing.JTextField();
        ingressPortTextField = new javax.swing.JTextField();
        queueTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        switchComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        enqueuePortTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tosTextField = new javax.swing.JTextField();
        serviceTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ethTypeTextField = new javax.swing.JTextField();
        vlanIDTextField1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        protocolTextField = new javax.swing.JTextField();
        priorityTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Policy");

        jLabel1.setText("Policy Name");

        jLabel2.setText("IP Source :");

        jLabel3.setText("IP Destination :");

        jLabel4.setText("Ingress Port :");

        jLabel5.setText("Switch :");

        jLabel6.setText("Queue :");

        qosNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qosNameTextFieldActionPerformed(evt);
            }
        });

        queueTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                queueTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                queueTextFieldKeyReleased(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        switchComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {  }));

        jLabel7.setText("Enqueue Port:");

        enqueuePortTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enqueuePortTextFieldActionPerformed(evt);
            }
        });
        enqueuePortTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                enqueuePortTextFieldKeyReleased(evt);
            }
        });

        jLabel8.setText("ToS :");

        tosTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tosTextFieldActionPerformed(evt);
            }
        });

        serviceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceTextFieldActionPerformed(evt);
            }
        });
        serviceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serviceTextFieldKeyReleased(evt);
            }
        });

        jLabel13.setText("Service :");

        jLabel14.setText("Eth Type :");

        ethTypeTextField.setText("0x0800");
        ethTypeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ethTypeTextFieldActionPerformed(evt);
            }
        });

        vlanIDTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vlanIDTextField1ActionPerformed(evt);
            }
        });

        jLabel15.setText("VLAN ID :");

        jLabel16.setText("Protocol :");

        protocolTextField.setText("6");
        protocolTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                protocolTextFieldActionPerformed(evt);
            }
        });

        priorityTextField.setText("32767");
        priorityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityTextFieldActionPerformed(evt);
            }
        });

        jLabel17.setText("Priority :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(64, 64, 64)
                        .addComponent(switchComboBox, 0, 258, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(34, 34, 34)
                        .addComponent(qosNameTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ingressPortTextField)
                            .addComponent(ipDestTextField)
                            .addComponent(ipSourceTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                            .addComponent(queueTextField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(enqueuePortTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(85, 85, 85)
                        .addComponent(tosTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(61, 61, 61)
                        .addComponent(serviceTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(50, 50, 50)
                        .addComponent(ethTypeTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(57, 57, 57)
                        .addComponent(vlanIDTextField1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(51, 51, 51)
                        .addComponent(protocolTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(62, 62, 62)
                        .addComponent(priorityTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(qosNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(switchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ingressPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(queueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(enqueuePortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(serviceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ipSourceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ipDestTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(ethTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(vlanIDTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(protocolTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(priorityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void qosNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qosNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qosNameTextFieldActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        String entity = "{"
                + "\"name\": \"" + qosNameTextField.getText() + "\","
                + "\"protocol\":\"" + protocolTextField.getText() + "\","
                + "\"eth-type\": \"" + ethTypeTextField.getText() + "\", "
                + "\"ingress-port\": \"" + ingressPortTextField.getText() + "\","
                + "\"ip-src\":\"" + ipSourceTextField.getText() + "\","
                + "\"ip-dst\":\"" + ipDestTextField.getText() + "\", "
                + "\"tos\":\"" + tosTextField.getText() + "\", "
                + "\"vlanid\":\"" + vlanIDTextField1.getText() + "\", "
                + "\"sw\": \"" + switchComboBox.getSelectedItem() + "\","
                + "\"queue\":\"" + queueTextField.getText() + "\","
                + "\"service\":\"" + serviceTextField.getText() + "\","
                + "\"priority\":\"" + priorityTextField.getText() + "\","
                + "\"enqueue-port\":\"" + enqueuePortTextField.getText() + "\""
                + "}";
        try {
            JOptionPane.showMessageDialog(rootPane, http.sendPost("http://"+Util.getControllerAddres()+"/wm/qos/policy/json", entity).get("status"));
        } catch (Exception ex) {
            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
        }

        dispose();
    }//GEN-LAST:event_addButtonActionPerformed

    private void enqueuePortTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enqueuePortTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enqueuePortTextFieldActionPerformed

    private void tosTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tosTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tosTextFieldActionPerformed

    private void serviceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceTextFieldActionPerformed

    private void ethTypeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ethTypeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ethTypeTextFieldActionPerformed

    private void vlanIDTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vlanIDTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vlanIDTextField1ActionPerformed

    private void protocolTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_protocolTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_protocolTextFieldActionPerformed

    private void priorityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priorityTextFieldActionPerformed

    private void queueTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queueTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_queueTextFieldKeyPressed

    private void queueTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queueTextFieldKeyReleased
        // TODO add your handling code here:
        if (queueTextField.getText().length() > 0) {
            serviceTextField.setEnabled(false);
        } else {
            serviceTextField.setEnabled(true);
        }
    }//GEN-LAST:event_queueTextFieldKeyReleased

    private void enqueuePortTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enqueuePortTextFieldKeyReleased
        // TODO add your handling code here:
        if (enqueuePortTextField.getText().length() > 0) {
            serviceTextField.setEnabled(false);
        } else {
            serviceTextField.setEnabled(true);
        }
    }//GEN-LAST:event_enqueuePortTextFieldKeyReleased

    private void serviceTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serviceTextFieldKeyReleased
        // TODO add your handling code here:
        if (serviceTextField.getText().length() > 0) {
            queueTextField.setEnabled(false);
            enqueuePortTextField.setEnabled(false);
        } else {
            queueTextField.setEnabled(true);
            enqueuePortTextField.setEnabled(true);
        }
    }//GEN-LAST:event_serviceTextFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(HttpClientHandler http) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPolicy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPolicy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPolicy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPolicy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        AddPolicy.http = http;
        AddPolicy.qosListSwitch = qosListSwitch;
        AddPolicy.qosList = qosList;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddPolicy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField enqueuePortTextField;
    private javax.swing.JTextField ethTypeTextField;
    private javax.swing.JTextField ingressPortTextField;
    private javax.swing.JTextField ipDestTextField;
    private javax.swing.JTextField ipSourceTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField priorityTextField;
    private javax.swing.JTextField protocolTextField;
    private javax.swing.JTextField qosNameTextField;
    private javax.swing.JTextField queueTextField;
    private javax.swing.JTextField serviceTextField;
    private javax.swing.JComboBox switchComboBox;
    private javax.swing.JTextField tosTextField;
    private javax.swing.JTextField vlanIDTextField1;
    // End of variables declaration//GEN-END:variables

    private void initPosition() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
        this.toFront();
    }

    private void initCompatibility() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            SwingUtilities.updateComponentTreeUI(this);

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {

        }
    }

}
