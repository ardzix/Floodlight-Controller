/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ardz.bandwidthcontroller;

import static com.ardz.bandwidthcontroller.AddPolicy.http;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

/**
 *
 * @author ardzix
 */
public class AddFirewallRule extends javax.swing.JFrame {

    /**
     * Creates new form AddFirewall
     */
    public AddFirewallRule() {
        initComponents();
        initPosition();
        initCompability();
        try {
            JSONObject device = http.sendGet("http://"+Util.getControllerAddres()+"/wm/device/");

            for (int i = 0; i < device.size(); i++) {
                JSONObject currentDevice = (JSONObject) device.get(i);
                JSONArray attachmentPoint = (JSONArray) currentDevice.get("attachmentPoint");
                if (!attachmentPoint.isEmpty()) {
                    JSONObject attachmentPointObj = (JSONObject) attachmentPoint.get(0);
                    switchComboBox.addItem(attachmentPointObj.get("switchDPID"));

                }
            }

//            for (int i = 0; i < switchComboBox.getItemCount(); i++) {
//
//                for (int j = 0; j < switchComboBox.getItemCount(); j++) {
//                    if (switchComboBox.getItemAt(i).equals(switchComboBox.getItemAt(j))) {
//                        switchComboBox.removeItemAt(j);
//                    }
//                }
//            }
        } catch (Exception ex) {
            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        switchComboBox = new javax.swing.JComboBox();
        srcInportTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        srcMacTextField = new javax.swing.JTextField();
        dstMacTextField = new javax.swing.JTextField();
        dlTypeComboBox = new javax.swing.JComboBox();
        srcIpTextField = new javax.swing.JTextField();
        dstIpTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        nwProtoComboBox = new javax.swing.JComboBox();
        tpSrcTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        tpDstTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        priorityTextField = new javax.swing.JTextField();
        actionComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Rule");

        jLabel2.setText("Switch :");

        jLabel3.setText("Src-inport :");

        jLabel4.setText("Src-mac :");

        jLabel5.setText("Dst-mac :");

        jLabel6.setText("Dl-type :");

        jLabel7.setText("Src-ip :");

        jLabel8.setText("Dst-ip :");

        jLabel9.setText("Nw-proto :");

        jLabel10.setText("Tp-src :");

        jLabel11.setText("Tp-dst :");

        jLabel12.setText("Priority :");

        jLabel13.setText("Action :");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        switchComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None" }));

        srcInportTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcInportTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("<short>");

        dlTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IPV4", "ARP" }));

        srcIpTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcIpTextFieldActionPerformed(evt);
            }
        });

        dstIpTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dstIpTextFieldActionPerformed(evt);
            }
        });

        jLabel14.setText("<A.B.C.D/Maskbit>");

        jLabel15.setText("<A.B.C.D/Maskbit>");

        nwProtoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TCP", "UDP", "ICMP" }));

        tpSrcTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpSrcTextFieldActionPerformed(evt);
            }
        });

        jLabel16.setText("<short>");

        tpDstTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpDstTextFieldActionPerformed(evt);
            }
        });

        jLabel17.setText("<short>");

        priorityTextField.setText("32767");
        priorityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityTextFieldActionPerformed(evt);
            }
        });

        actionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALLOW", "DENY" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(addButton))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(switchComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(srcMacTextField)
                    .addComponent(dstMacTextField)
                    .addComponent(dlTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nwProtoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priorityTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(srcInportTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(srcIpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dstIpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tpDstTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(tpSrcTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addComponent(actionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(switchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(srcInportTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(srcMacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dstMacTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dlTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(srcIpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(dstIpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(nwProtoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tpSrcTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tpDstTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(priorityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(actionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        String switchSelected = "";
        if(switchComboBox.getSelectedIndex()>0)
            switchSelected = "\"switchid\": \"" + switchComboBox.getSelectedItem()+ "\",";
        String entity = "{"
                + switchSelected 
                + "\"src-inport\":\"" + srcInportTextField.getText() + "\","
                + "\"src-mac\":\"" + srcMacTextField.getText() + "\","
                + "\"dst-mac\":\"" + dstMacTextField.getText() + "\","
                + "\"dl-type\":\"" + dlTypeComboBox.getSelectedItem() + "\","
                + "\"src-ip\":\"" + srcIpTextField.getText() + "\","
                + "\"dst-ip\":\"" + dstIpTextField.getText() + "\","
                + "\"nw-proto\":\"" + nwProtoComboBox.getSelectedItem() + "\","
                + "\"tp-src\":\"" + tpSrcTextField.getText() + "\","
                + "\"tp-dst\":\"" + tpDstTextField.getText() + "\","
                + "\"priority\":\"" + priorityTextField.getText() + "\","
                + "\"action\":\"" + actionComboBox.getSelectedItem() + "\""
                + "}";       
        
        System.out.println("entitiy:\n"+entity);
        
        try {
            JOptionPane.showMessageDialog(rootPane, http.sendPost("http://"+Util.getControllerAddres()+"/wm/firewall/rules/json", entity).get("status"));
        } catch (Exception ex) {
            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        dispose();
    }//GEN-LAST:event_addButtonActionPerformed

    private void srcInportTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcInportTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srcInportTextFieldActionPerformed

    private void srcIpTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcIpTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srcIpTextFieldActionPerformed

    private void dstIpTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dstIpTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dstIpTextFieldActionPerformed

    private void tpSrcTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpSrcTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpSrcTextFieldActionPerformed

    private void tpDstTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpDstTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpDstTextFieldActionPerformed

    private void priorityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priorityTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(HttpClientHandler http) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFirewallRule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFirewallRule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFirewallRule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFirewallRule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFirewallRule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox actionComboBox;
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox dlTypeComboBox;
    private javax.swing.JTextField dstIpTextField;
    private javax.swing.JTextField dstMacTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox nwProtoComboBox;
    private javax.swing.JTextField priorityTextField;
    private javax.swing.JTextField srcInportTextField;
    private javax.swing.JTextField srcIpTextField;
    private javax.swing.JTextField srcMacTextField;
    private javax.swing.JComboBox switchComboBox;
    private javax.swing.JTextField tpDstTextField;
    private javax.swing.JTextField tpSrcTextField;
    // End of variables declaration//GEN-END:variables

    private void initPosition() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
        this.toFront();
    }

    private void initCompability() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            SwingUtilities.updateComponentTreeUI(this);

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {

        }
    }
}
